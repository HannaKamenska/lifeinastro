
═══════════════════════════════════════════════════════
📦 ИНСТРУКЦИЯ ПО ВНЕДРЕНИЮ ТЕСТОВ В ПРОЕКТ LIFEINASTRO
═══════════════════════════════════════════════════════

Я создал все необходимые файлы для тестирования вашего проекта.
Вот что нужно сделать дальше:

🔧 ШАГ 1: УСТАНОВКА ЗАВИСИМОСТЕЙ
─────────────────────────────────────────────────────

Откройте терминал в папке проекта и выполните:

npm install --save-dev vitest @vitest/ui @vitest/coverage-v8 jsdom @testing-library/react @testing-library/jest-dom @testing-library/user-event @playwright/test

Это установит все инструменты для тестирования.

📁 ШАГ 2: КОПИРОВАНИЕ ФАЙЛОВ
─────────────────────────────────────────────────────

Скопируйте созданные файлы в ваш проект:

1. vitest.config.ts → в корень проекта
2. playwright.config.ts → в корень проекта
3. src-test-setup.ts → в src/test/setup.ts
4. src-test-utils.tsx → в src/test/utils.tsx
5. Navigation.test.tsx → в src/components/__tests__/Navigation.test.tsx
6. Contact.test.tsx → в src/components/__tests__/Contact.test.tsx
7. Services.test.tsx → в src/components/__tests__/Services.test.tsx
8. critical-flow.spec.ts → в e2e/critical-flow.spec.ts
9. github-workflow-test.yml → в .github/workflows/test.yml

📝 ШАГ 3: ОБНОВЛЕНИЕ PACKAGE.JSON
─────────────────────────────────────────────────────

Добавьте в ваш package.json новые скрипты (см. файл package-additions.json):

"scripts": {
  "test": "vitest",
  "test:ui": "vitest --ui",
  "test:coverage": "vitest --coverage",
  "test:e2e": "playwright test",
  "test:all": "npm run test && npm run test:e2e"
}

▶️ ШАГ 4: ЗАПУСК ТЕСТОВ
─────────────────────────────────────────────────────

Теперь вы можете запускать тесты:

# Запуск юнит-тестов (быстрые проверки компонентов)
npm run test

# Запуск с визуальным интерфейсом
npm run test:ui

# Проверка покрытия кода тестами
npm run test:coverage

# Запуск E2E тестов (полные сценарии пользователя)
npm run test:e2e

# Запуск всех тестов
npm run test:all

🤖 ШАГ 5: АВТОМАТИЗАЦИЯ (ОПЦИОНАЛЬНО)
─────────────────────────────────────────────────────

Файл github-workflow-test.yml настроит автоматический запуск
тестов при каждом изменении кода в GitHub.

Это как охранная сигнализация - будет проверять всё автоматически!

✅ ЧТО ВЫ ПОЛУЧИТЕ:
─────────────────────────────────────────────────────

✓ Автоматическая проверка 3 критичных компонентов:
  • Навигация (меню сайта)
  • Услуги (ваши предложения)
  • Контактная форма (связь с клиентами)

✓ Проверка пользовательских сценариев:
  • Клиент находит услуги и связывается с вами
  • Мобильная версия работает корректно
  • Сайт загружается быстро

✓ Отчёты о покрытии кода тестами

✓ Уверенность, что сайт работает стабильно

═══════════════════════════════════════════════════════

💡 НУЖНА ПОМОЩЬ?

Если у вас возникнут вопросы при внедрении, обратитесь к
разработчику и покажите ему эти файлы. Всё готово к использованию!

═══════════════════════════════════════════════════════
